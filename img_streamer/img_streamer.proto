// SPDX-License-Identifier: MIT

syntax = "proto3";

<<<<<<<< HEAD:cedana-image-streamer/img_streamer/img-streamer.proto
package img_streamer;
========
package cedana.services.img_streamer;
option go_package = "cedana_api/img_streamer";
>>>>>>>> main:img_streamer/img_streamer.proto

// This message is sent from CRIU to the streamer.
// * During dump, it communicates the name of the file that is about to be sent
//   to the streamer.
// * During restore, CRIU requests image files from the streamer. The message is
//   used to communicate the name of the desired file.
message img_streamer_request_entry {
  string filename = 1;
}

// This message is sent from the streamer to CRIU. It is only used during
// restore to report whether the requested file exists.
message img_streamer_reply_entry {
  bool exists = 1;
}

message marker {
  uint64 seq = 1;
  oneof body {
    // Denotes the filename of the next upcoming markers (denoted as current file)
    string filename = 2;
    // Incoming data for the current file
    uint32 file_data = 3;
    // EOF of current file is reached
    bool file_eof = 4;
    // EOF of image is reached
    bool image_eof = 5;
  }
}

message marker {
    uint64 seq = 1;
    oneof body {
        // Denotes the filename of the next upcoming markers (denoted as current file)
        string filename = 2;
        // Incoming data for the current file
        uint32 file_data = 3;
        // EOF of current file is reached
        bool file_eof = 4;
        // EOF of image is reached
        bool image_eof = 5;
    }
}
